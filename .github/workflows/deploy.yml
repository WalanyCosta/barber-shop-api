# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: deploy

on:
    push:
        branches: ["deploy"]
    pull_request:
        branches: ["deploy"]

jobs:
    test:
        runs-on: ubuntu-latest
        env:
            DATABASE_URL: ${{vars.DATABASE_URL}}
            PRIVATE_KEY: ${{vars.PRIVATE_KEY}}

        strategy:
            matrix:
                node-version: [18.x]

        services:
            postgres:
                image: postgres
                env:
                    POSTGRES_USER: docker
                    POSTGRES_PASSWORD: docker
                    POSTGRES_DB: barber-shop
                options: >-
                    --health-cmd pg_isready
                    --health-interval 10s
                    --health-timeout 5s
                    --health-retries 5
                ports:
                    - 5432:5432

        steps:
            - uses: actions/checkout@v3
            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v3
              with:
                  node-version: ${{ matrix.node-version }}
            - run: npm i
            - run: npx eslint "src/**"
            - run: npx prisma migrate dev
            - run: npm run test:ci

    deploy:
        needs: [test]
        runs-on: ubuntu-latest
        steps:
            - name: Deploy to production
              uses: johnbeynon/render-deploy-action@v0.0.8
              with:
                  service-id: ${{ vars.SERVICE_ID }}
                  api-key: ${{ vars.API_KEY }}
                  wait-for-success: true
